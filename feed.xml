<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vikas Kumar</title>
    <description>My Learnings</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 06 Dec 2018 20:12:53 +0530</pubDate>
    <lastBuildDate>Thu, 06 Dec 2018 20:12:53 +0530</lastBuildDate>
    <generator>Jekyll v3.6.3</generator>
    
      <item>
        <title>Links</title>
        <description>&lt;h3 id=&quot;java&quot;&gt;JAVA&lt;/h3&gt;

&lt;p&gt;1-User Type time zone &lt;a href=&quot;http://www.joobik.com/2010/12/mapping-dates-and-time-zones-with.html&quot;&gt;http://www.joobik.com/2010/12/mapping-dates-and-time-zones-with.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;2-JAVA_OPTS vm option: &lt;a href=&quot;https://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html&quot;&gt;https://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;3-Memory Leaks: &lt;a href=&quot;https://www.toptal.com/java/hunting-memory-leaks-in-java&quot;&gt;https://www.toptal.com/java/hunting-memory-leaks-in-java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;4-Squid proxy servers: &lt;a href=&quot;https://whatis.techtarget.com/definition/Squid-proxy-server&quot;&gt;https://whatis.techtarget.com/definition/Squid-proxy-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5-Spring Request mapping: &lt;a href=&quot;https://www.baeldung.com/spring-requestmapping&quot;&gt;https://www.baeldung.com/spring-requestmapping&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6-Test Coverage, power mockito, eclEmma: &lt;a href=&quot;http://www.notonlyanecmplace.com/make-eclemma-test-coverage-work-with-powermock/&quot;&gt;http://www.notonlyanecmplace.com/make-eclemma-test-coverage-work-with-powermock/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;7-DataSource &lt;a href=&quot;http://tomee.apache.org/datasource-config.html&quot;&gt;http://tomee.apache.org/datasource-config.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8-UTF-8 Data tomcat&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/19052676/how-to-set-useunicode-true-and-characterencoding-utf8-properties-on-spring-manag&quot;&gt;https://stackoverflow.com/questions/19052676/how-to-set-useunicode-true-and-characterencoding-utf8-properties-on-spring-manag&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/13359683/how-to-use-useunicode-yes-characterencoding-utf-8-with-dbcp&quot;&gt;https://stackoverflow.com/questions/13359683/how-to-use-useunicode-yes-characterencoding-utf-8-with-dbcp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9-&lt;a href=&quot;https://hellokoding.com/registration-and-login-example-with-spring-xml-configuration-maven-jsp-and-mysql/&quot;&gt;https://hellokoding.com/registration-and-login-example-with-spring-xml-configuration-maven-jsp-and-mysql/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10-&lt;a href=&quot;http://www.baeldung.com/registration-with-spring-mvc-and-spring-security&quot;&gt;http://www.baeldung.com/registration-with-spring-mvc-and-spring-security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;11-&lt;a href=&quot;http://o7planning.org/en/10305/simple-login-java-web-application-using-spring-mvc-spring-security-and-spring-jdbc&quot;&gt;http://o7planning.org/en/10305/simple-login-java-web-application-using-spring-mvc-spring-security-and-spring-jdbc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;12-&lt;a href=&quot;https://www.mkyong.com/spring-security/spring-security-custom-login-form-annotation-example/&quot;&gt;https://www.mkyong.com/spring-security/spring-security-custom-login-form-annotation-example/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;13-&lt;a href=&quot;http://websystique.com/spring-security/spring-security-4-custom-login-form-annotation-example/&quot;&gt;http://websystique.com/spring-security/spring-security-4-custom-login-form-annotation-example/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;14-Tomcat server.xml&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mulesoft.com/tcat/tomcat-ssl&quot;&gt;https://www.mulesoft.com/tcat/tomcat-ssl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.eveoh.nl/2014/02/tls-ssl-ciphers-pfs-tomcat/&quot;&gt;https://blog.eveoh.nl/2014/02/tls-ssl-ciphers-pfs-tomcat/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/jsse/JSSERefGuide.html&quot;&gt;https://docs.oracle.com/javase/7/docs/technotes/guides/security/jsse/JSSERefGuide.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;15- HTTP Caching &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;16- Security&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19721403/authentication-for-rest-web-services&quot;&gt;http://stackoverflow.com/questions/19721403/authentication-for-rest-web-services&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/websphere/library/techarticles/1312_ahmed/1312_ahmed.html&quot;&gt;http://www.ibm.com/developerworks/websphere/library/techarticles/1312_ahmed/1312_ahmed.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6134082/restful-web-service-how-to-authenticate-requests-from-other-services&quot;&gt;http://stackoverflow.com/questions/6134082/restful-web-service-how-to-authenticate-requests-from-other-services&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.devx.com/webdev/create-your-own-rest-api-using-oauth-authentication.html&quot;&gt;http://www.devx.com/webdev/create-your-own-rest-api-using-oauth-authentication.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hsc.com/Portals/0/Uploads/Articles/WP_Securing_RESTful_WebServices_OAuth2635406646412464000.pdf&quot;&gt;http://www.hsc.com/Portals/0/Uploads/Articles/WP_Securing_RESTful_WebServices_OAuth2635406646412464000.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://paxcel.net/blog/securing-rest-webservice-using-spring-security/&quot;&gt;http://paxcel.net/blog/securing-rest-webservice-using-spring-security/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.networkedassets.com/configuring-spring-security-for-a-restful-web-services/&quot;&gt;http://www.networkedassets.com/configuring-spring-security-for-a-restful-web-services/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.baeldung.com/2011/10/31/securing-a-restful-web-service-with-spring-security-3-1-part-3/&quot;&gt;http://www.baeldung.com/2011/10/31/securing-a-restful-web-service-with-spring-security-3-1-part-3/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://java.dzone.com/articles/securing-restful-web-service&quot;&gt;http://java.dzone.com/articles/securing-restful-web-service&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/24150621/spring-security-token-authentication-restful-json-service&quot;&gt;http://stackoverflow.com/questions/24150621/spring-security-token-authentication-restful-json-service&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://java.dzone.com/articles/secure-rest-services-using&quot;&gt;http://java.dzone.com/articles/secure-rest-services-using&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;17-spring async : &lt;a href=&quot;http://stackoverflow.com/questions/29181057/how-to-check-that-async-call-completed-in-spring&quot;&gt;http://stackoverflow.com/questions/29181057/how-to-check-that-async-call-completed-in-spring&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;18-Spring Rest service (&lt;a href=&quot;http://spring.io/guides/tutorials/bookmarks/&quot;&gt;http://spring.io/guides/tutorials/bookmarks/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;19-Jekyll code hightlight &lt;a href=&quot;https://stackoverflow.com/questions/37456479/error-while-running-gulp-plugin/37537914#37537914&quot;&gt;https://stackoverflow.com/questions/37456479/error-while-running-gulp-plugin/37537914#37537914&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 28 Nov 2018 19:16:52 +0530</pubDate>
        <link>http://localhost:4000/blog/2018/external-link/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/external-link/</guid>
        
        
      </item>
    
      <item>
        <title>Java Cheat Sheet!</title>
        <description>&lt;p&gt;Hashmap =&amp;gt; Hashtable or ConcurrentHashMap.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Immutable objects are those, whose state can not be changed once created e.g. java.lang.String, once created can not be modified e.g. trim, uppercase, lowercase. All modification in String result in new object.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Collections such as &lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;HashSet&lt;/code&gt; use a hashcode value of an object to determine how it should be stored inside a collection, and the hashcode is used again in order to locate the object in its collection. 
Hashing retrieval is a two-step process:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Find the right bucket (using &lt;code class=&quot;highlighter-rouge&quot;&gt;hashCode()&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Search the bucket for the right element (using &lt;code class=&quot;highlighter-rouge&quot;&gt;equals()&lt;/code&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Basically REST is stateless means every HTTP request happens in complete isolation. When the client makes an HTTP request, it includes all information necessary for the server to fulfill that request. The server never relies on information from previous requests. If that information was important, the client would have sent it again in this request. 
Statelessness is easier to distribute across load-balanced servers. Since no two requests depend on each other, they can be handled by two different servers that never coordinate.&lt;/p&gt;

&lt;p&gt;A practical example.&lt;/p&gt;

&lt;p&gt;Suppose we have a cluster of 12 identical J2EE webapp servers. Each one has the same application installed on it. We expect thousands of hits per hour. 
If the webapp was stateful, once a client had logged into one of those servers, the session state (HttpSession) would (usually) reside in RAM within that server. If a later request came in and that server was loaded down but other servers were idle, they could not be employed to handle the request. Or at a minimum, could not be employed unless the cluster was set up to serialize sessions and ship them between servers, which is extra overhead. There would be an asymmetry between the server currently holding the user’s state and the other webapp servers.&lt;/p&gt;

&lt;p&gt;A stateless webapp, on the other hand, wouldn’t establish an HttpSession. Any ongoing state would be an artefact of (presumably distributed) backend processes. So you could send out requests to any server in the cluster that happened to be free at the moment. They would all be symmetrical in their response.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Bean
@Autowired
IOC - it is not going to instantiate the object utill it required&lt;/p&gt;

&lt;p&gt;@cbcertservice interface what kind of service would be injected in this is decided run time ..and that implementation would be annoted as @Service&lt;/p&gt;

</description>
        <pubDate>Sun, 25 Nov 2018 19:16:52 +0530</pubDate>
        <link>http://localhost:4000/blog/2018/java-notes/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/java-notes/</guid>
        
        
      </item>
    
      <item>
        <title>Security Notes!</title>
        <description>&lt;h3 id=&quot;x509-certificate&quot;&gt;X.509 Certificate&lt;/h3&gt;

&lt;p&gt;An X.509 certificate is a digital certificate that uses the widely accepted international X.509 public key infrastructure (PKI) standard to verify that a public key belongs to the user, computer or service identity contained within the certificate.&lt;/p&gt;

&lt;h3 id=&quot;authentication&quot;&gt;Authentication&lt;/h3&gt;

&lt;p&gt;both server and client be assured that they are talking to right entity.&lt;/p&gt;

&lt;h3 id=&quot;authorization&quot;&gt;Authorization&lt;/h3&gt;

&lt;p&gt;who can perform what??? Not every body can perform all operation so we should have some mechanism so that we can prevent and filter the resource access.&lt;/p&gt;

&lt;h3 id=&quot;part-1&quot;&gt;PART-1&lt;/h3&gt;

&lt;p&gt;1.Encryption-decryption?&lt;/p&gt;

&lt;p&gt;2.Public key- private key?&lt;/p&gt;

&lt;p&gt;3.What is certificate(digital)?&lt;/p&gt;

&lt;p&gt;4.Certificate chain, Certificate content?&lt;/p&gt;

&lt;p&gt;5.Need of Certificate? Why????&lt;/p&gt;

&lt;p&gt;6.How Certificate works in their use case? Must part&lt;/p&gt;

&lt;p&gt;7.Authentication and authorization?&lt;/p&gt;

&lt;p&gt;8.Certificate authority (CA)?&lt;/p&gt;

&lt;p&gt;9.Role of CA?&lt;/p&gt;

&lt;p&gt;10.How and What CA works?   Must part&lt;/p&gt;

&lt;p&gt;11.SSL&lt;/p&gt;

&lt;p&gt;12.How SSL works??    &lt;a href=&quot;https://www.youtube.com/watch?v=iQsKdtjwtYI&quot;&gt;https://www.youtube.com/watch?v=iQsKdtjwtYI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;13.SSL Handshake, SSL Certificate??&lt;/p&gt;

&lt;p&gt;14.HTTP/HTTPS&lt;/p&gt;

&lt;h3 id=&quot;part-2&quot;&gt;PART-2&lt;/h3&gt;

&lt;p&gt;1.Web Service&lt;/p&gt;

&lt;p&gt;2.REST&lt;/p&gt;

&lt;p&gt;3.JAVA&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Case Study for any organization like bank, 
Security aspects of using certificate, how certificate works for them and fulfill their purpose of using Certificate?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/788808/how-do-digital-certificates-work-when-used-for-securing-websites-using-ssl&quot;&gt;http://stackoverflow.com/questions/788808/how-do-digital-certificates-work-when-used-for-securing-websites-using-ssl&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.comodo.com/resources/small-business/digital-certificates-intro.php?key5sk1=f8b324f522b18fac67786be3567b80d6c0a4ff99&quot;&gt;https://www.comodo.com/resources/small-business/digital-certificates-intro.php?key5sk1=f8b324f522b18fac67786be3567b80d6c0a4ff99&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 24 Nov 2018 19:16:52 +0530</pubDate>
        <link>http://localhost:4000/blog/2018/security-notes/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/2018/security-notes/</guid>
        
        
      </item>
    
  </channel>
</rss>
